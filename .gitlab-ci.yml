# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
services:
  - postgres:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
    paths:
    - ~/.cache/pip/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
    - sudo apt-get -yq update
    - sudo apt-get -yq install python3.8
    - python3.8 -m pip install pip --upgrade
    - python3.8 -V # Print out python version for debugging
    - pip install pipenv
    - pipenv install --dev

stages:
    - test
    - sonarqube-check

test:
    stage: test
    variables:
        DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    script:
    - pipenv run python manage.py migrate
    - pipenv run python manage.py test
    - pipenv run coverage run -m pytest
    - pipenv run coverage run report

sonarqube-check:
    stage: sonarqube-check
    script:
        - sonar-scanner -Dsonar.qualitygate.wait=true
    allow_failure: true
    only:
        - merge_requests
        - master
  